# The build file is generic and requires Substitution to build correctly and will
# Error if not set.
#
# $_PROJECT_NAME : The name of the project in the monorepo
# $_PROJECT_DIRECTORY: The directory of src files
#
# The following are used by kubectl to update the image and trigger a rolling update)
#
# $_DEPLOYMENT_NAME: The name of the K8s deployment
# $_CONTAINER_NAME: The name of the specific container.
# $_CLUSTER_ZONE: k8s cluster zone
# $_CLUSTER_NAME: k8s cluster name
#
# The build account must have the 'Kubernetes Engine - Kubernetes Engine Developer' role enabled
#
# This may vary for your use case, however for the purpose of the example/guide the build
# trigger is set up to trigger when a new tag (semantic release bot) of 'v*' is pushed to
# the repo. This will trigger a rebuild and update of the kubernetes deployment
#
# Alternatively the command `kubectl rollout restart deployment` can be used to trigger an update.
#
# https://cloud.google.com/cloud-build/docs/configuring-builds/substitute-variable-values
#
steps:
  # Build the container
  - name: gcr.io/cloud-builders/docker
    args:
      - build
      - -t
      - gcr.io/$PROJECT_ID/$_PROJECT_NAME
      - -f
      - docker/server.Dockerfile
      - --build-arg
      - PROJECT_DIRECTORY=$_PROJECT_DIRECTORY
      - .
    timeout: 500s

  # Tag with the version
  - name: gcr.io/cloud-builders/docker
    args:
      - tag
      - gcr.io/$PROJECT_ID/$_PROJECT_NAME
      - gcr.io/$PROJECT_ID/$_PROJECT_NAME:$TAG_NAME

  # Push the image to Google Cloud Registry
  - name: gcr.io/cloud-builders/docker
    args:
      - push
      - gcr.io/$PROJECT_ID/$_PROJECT_NAME:$TAG_NAME

  # Trigger a rolling update for the cluster
  - name: gcr.io/cloud-builders/kubectl
    args:
      - set
      - image
      - deployment/$_DEPLOYMENT_NAME
      - $_CONTAINER_NAME=gcr.io/$PROJECT_ID/$_PROJECT_NAME:$TAG_NAME
    env:
      # - CLOUDSDK_COMPUTE_REGION=$_CLUSTER_REGION
      - CLOUDSDK_COMPUTE_ZONE=$_CLUSTER_ZONE
      - CLOUDSDK_CONTAINER_CLUSTER=$_CLUSTER_NAME
