version: 2.1

orbs:
  aws-cli: circleci/aws-cli@1.0.0
  serverless-framework: circleci/serverless-framework@1.0.1

setup: &setup
  working_directory: ~/ztp
  docker:
    - image: circleci/node:latest

deps-restore: &deps-restore
  restore_cache:
    key: zero-to-production-{{ checksum "package-lock.json" }}

deps-cache: &deps-cache
  save_cache:
    key: zero-to-production-{{ checksum "package-lock.json" }}
    paths:
      - ./node_modules

jobs:
  checkout-and-install:
    <<: *setup
    steps:
      - checkout
      - <<: *deps-restore
      - run: npm install --no-save --silent
      - <<: *deps-cache

  affected-build-and-test:
    <<: *setup
    steps:
      - checkout
      - <<: *deps-restore
      - run:
          name: Testing Affected Packages
          command: npx nx affected --target=test --base=origin/master
      - run:
          name: Linting Affected Packages
          command: npx nx affected --target=lint --base=origin/master
      - run:
          name: Building Affected Applications
          command: npx nx affected --target=build --base=origin/master

  release:
    <<: *setup
    steps:
      - checkout
      - <<: *deps-restore
      - aws-cli/setup:
          profile-name: default
      - run:
          name: Release
          command: npm run semantic-release || true

  server-lambda-deploy:
    <<: *setup
    steps:
      - checkout
      - aws-cli/setup:
          profile-name: default
      - run:
        name: Deploy the API to AWS lambda
        command: |-
          npx nx run server-lambda:build:production
          npx nx run server-lambda:serverless-deploy

  examples-web-deploy:
    <<: *setup
    steps:
      - checkout
      - run:
        name: Deploy the examples site to Firebase Functions
        command: |-
          npx nx run examples-web-functions:build:production
          npx nx run examples-web-functions:deploy-ci --args='--token="$FIREBASE_TOKEN"'

workflows:
  version: 2
  build-and-test:
    jobs:
      - checkout-and-install
      # - affected-build-and-test:
      #     requires:
      #       - checkout-and-install
      # - aws-setup:
      #     context: aws
      #     filters:
      #       branches:
      #         only: master
      # - firebase-setup:
      #     context: firebase
      #     filters:
      #       branches:
      #         only: master
      - release:
          # requires:
          #   - affected-build-and-test
          filters:
            branches:
              only: ci-testing
      - server-lambda-deploy:
          # requires:
          #   - affected-build-and-test
          filters:
            branches:
              only: ci-testing
      - examples-web-deploy:
          # requires:
          #   - affected-build-and-test
          filters:
            branches:
              only: ci-testing
